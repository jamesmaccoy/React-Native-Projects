{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"H:\\\\React Native Projects\\\\ATDP\\\\screens\\\\AddUserScreen.js\";\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from \"../database/firebaseDb\";\n\nvar AddUserScreen = function (_Component) {\n  _inherits(AddUserScreen, _Component);\n\n  function AddUserScreen() {\n    var _this;\n\n    _classCallCheck(this, AddUserScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddUserScreen).call(this));\n\n    _this.inputValueUpdate = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.dbRef = firebase.firestore().collection('agencies');\n    _this.state = {\n      agency: '',\n      repName: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(AddUserScreen, [{\n    key: \"storeUser\",\n    value: function storeUser() {\n      var _this2 = this;\n\n      if (this.state.agency === '') {\n        alert('Fill at least your name!');\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.dbRef.add({\n          agency: this.state.agency,\n          repName: this.state.repName\n        }).then(function (res) {\n          _this2.setState({\n            agency: '',\n            repName: '',\n            isLoading: false\n          });\n\n          _this2.props.navigation.navigate('UserScreen');\n        }).catch(function (err) {\n          console.error(\"Error found: \", err);\n\n          _this2.setState({\n            isLoading: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, React.createElement(View, {\n        style: styles.inputGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Agency Name',\n        value: this.state.agency,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'agency');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      })), React.createElement(View, {\n        style: styles.inputGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Contact Name',\n        value: this.state.repName,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'repName');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      })), React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.buttonInner,\n        onPress: function onPress() {\n          return _this3.storeUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, \"ADD\"))));\n    }\n  }]);\n\n  return AddUserScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35,\n    backgroundColor: '#ffffff'\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 10,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#65a984',\n    backgroundColor: '#ededed'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    color: '#6fa686',\n    backgroundColor: '#ffffff',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#e9e9e9'\n  },\n  buttonInner: {\n    padding: 10\n  }\n});\nexport default AddUserScreen;","map":{"version":3,"sources":["H:/React Native Projects/ATDP/screens/AddUserScreen.js"],"names":["React","Component","firebase","AddUserScreen","inputValueUpdate","val","prop","state","setState","dbRef","firestore","collection","agency","repName","isLoading","alert","add","then","res","props","navigation","navigate","catch","err","console","error","styles","preloader","container","inputGroup","button","buttonInner","storeUser","StyleSheet","create","flex","padding","backgroundColor","marginBottom","borderBottomWidth","borderBottomColor","left","right","top","bottom","position","alignItems","justifyContent","color","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { TouchableOpacity,Text, StyleSheet, TextInput, ScrollView, ActivityIndicator, View } from 'react-native';\r\nimport firebase from '../database/firebaseDb';\r\n\r\n\r\nclass AddUserScreen extends Component {\r\n\r\n\r\n  constructor() {\r\n    super();\r\n    this.dbRef = firebase.firestore().collection('agencies');\r\n    this.state = {\r\n      agency: '',\r\n      repName: '',\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  inputValueUpdate = (val, prop) => {\r\n    const state = this.state;\r\n    state[prop] = val;\r\n    this.setState(state);\r\n  }\r\n\r\n  storeUser() {\r\n    if(this.state.agency === ''){\r\n     alert('Fill at least your name!')\r\n    } else {\r\n      this.setState({\r\n        isLoading: true,\r\n      });\r\n      this.dbRef.add({\r\n        agency: this.state.agency,\r\n        repName: this.state.repName,\r\n      }).then((res) => {\r\n        this.setState({\r\n          agency: '',\r\n          repName: '',\r\n          isLoading: false,\r\n        });\r\n        this.props.navigation.navigate('UserScreen')\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error found: \", err);\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading){\r\n      return(\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\r\n        </View>\r\n      )\r\n    }\r\n\r\n\r\n    return (\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'Agency Name'}\r\n              value={this.state.agency}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'agency')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n              placeholder={'Contact Name'}\r\n              value={this.state.repName}\r\n              onChangeText={(val) => this.inputValueUpdate(val, 'repName')}\r\n          />\r\n        </View>\r\n        <View style={styles.button}>\r\n          <TouchableOpacity\r\n            style={styles.buttonInner}\r\n            onPress={() => this.storeUser()}\r\n          >\r\n          <Text>ADD</Text>\r\n        </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 35,\r\n    backgroundColor: '#ffffff'\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    color: '#6fa686',\r\n    backgroundColor: '#ffffff',\r\n    padding: 10,\r\n    borderWidth:1,\r\n    borderColor:'#e9e9e9',\r\n  },\r\n  buttonInner: {\r\n    padding: 10,\r\n  },\r\n})\r\n\r\nexport default AddUserScreen;\r\n"]},"metadata":{},"sourceType":"module"}